diff -ruN openstack-tripleo-heat-templates-original/puppet/services/neutron-base.yaml openstack-tripleo-heat-templates/puppet/services/neutron-base.yaml
--- openstack-tripleo-heat-templates-original/puppet/services/neutron-base.yaml 2019-01-15 00:28:34.585000000 -0500
+++ openstack-tripleo-heat-templates/puppet/services/neutron-base.yaml  2019-01-15 00:26:21.575000000 -0500
@@ -116,6 +116,12 @@
   EnableInternalTLS:
     type: boolean
     default: false
+  EnableVLANTransparency:
+    default: false
+    description: >
+        If True, then allow plugins that support it to create VLAN
+        transparent networks.
+    type: boolean

 conditions:
   dhcp_agents_zero: {equals : [{get_param: NeutronDhcpAgentsPerNetwork}, 0]}
@@ -152,6 +158,7 @@
             neutron::db::sync::db_sync_timeout: {get_param: DatabaseSyncTimeout}
             neutron::global_physnet_mtu: {get_param: NeutronGlobalPhysnetMtu}
             neutron::db::sync::extra_params: {get_param: NeutronDBSyncExtraParams}
+            neutron::vlan_transparent: {get_param: EnableVLANTransparency}
           - if:
             - dhcp_agents_zero
             - {}
diff -ruN openstack-tripleo-heat-templates-original/puppet/services/neutron-compute-plugin-nuage.yaml openstack-tripleo-heat-templates/puppet/services/neutron-compute-plugin-nuage.yaml
--- openstack-tripleo-heat-templates-original/puppet/services/neutron-compute-plugin-nuage.yaml 2019-01-15 00:27:45.770000000 -0500
+++ openstack-tripleo-heat-templates/puppet/services/neutron-compute-plugin-nuage.yaml  2019-01-15 00:26:21.594000000 -0500
@@ -75,6 +75,25 @@
     description: Support for non-default MTU configured on each Compute node
     type: string
     default: ''
+  OvsHwOffload:
+    default: false
+    description: |
+      Enable OVS Hardware Offload. This feature supported from OVS 2.8.0
+    type: boolean
+
+resources:
+
+  RoleParametersValue:
+    type: OS::Heat::Value
+    properties:
+      type: json
+      value:
+        map_replace:
+          - map_replace:
+            - nuage::vrs::enable_hw_offload: OvsHwOffload
+            - values: {get_param: [RoleParameters]}
+          - values:
+              OvsHwOffload: {get_param: OvsHwOffload}

 outputs:
   role_data:
@@ -82,25 +101,27 @@
     value:
       service_name: neutron_compute_plugin_nuage
       config_settings:
-        nuage::vrs::active_controller: {get_param: NuageActiveController}
-        nuage::vrs::standby_controller: {get_param: NuageStandbyController}
-        nuage::vrs::bridge_mtu: {get_param: NuageBridgeMTU}
-        nuage::metadataagent::metadata_port: {get_param: NuageMetadataPort}
-        nuage::metadataagent::nova_metadata_port: {get_param: NuageNovaMetadataPort}
-        nuage::metadataagent::metadata_secret: {get_param: NuageMetadataProxySharedSecret}
-        nuage::metadataagent::nova_client_version: {get_param: NuageNovaClientVersion}
-        nuage::metadataagent::nova_os_username: {get_param: NuageNovaOsUsername}
-        nuage::metadataagent::metadata_agent_start_with_ovs: {get_param: NuageMetadataAgentStartWithOvs}
-        nuage::metadataagent::nova_api_endpoint_type: {get_param: NuageNovaApiEndpoint}
-        nuage::metadataagent::nova_region_name: {get_param: NuageNovaRegionName}
-        tripleo::profile::base::neutron::agents::nuage::nova_os_tenant_name: 'service'
-        tripleo::profile::base::neutron::agents::nuage::nova_os_password: {get_param: NovaPassword}
-        tripleo::profile::base::neutron::agents::nuage::nova_auth_ip: {get_param: [EndpointMap, KeystoneInternal, host]}
-        tripleo.neutron_compute_plugin_nuage.firewall_rules:
-          '118 neutron vxlan networks':
-            proto: 'udp'
-            dport: 4789
-          '100 metadata agent':
-            dport: {get_param: NuageMetadataPort}
+        map_merge:
+          - get_attr: [RoleParametersValue, value]
+          - nuage::vrs::active_controller: {get_param: NuageActiveController}
+            nuage::vrs::standby_controller: {get_param: NuageStandbyController}
+            nuage::vrs::bridge_mtu: {get_param: NuageBridgeMTU}
+            nuage::metadataagent::metadata_port: {get_param: NuageMetadataPort}
+            nuage::metadataagent::nova_metadata_port: {get_param: NuageNovaMetadataPort}
+            nuage::metadataagent::metadata_secret: {get_param: NuageMetadataProxySharedSecret}
+            nuage::metadataagent::nova_client_version: {get_param: NuageNovaClientVersion}
+            nuage::metadataagent::nova_os_username: {get_param: NuageNovaOsUsername}
+            nuage::metadataagent::metadata_agent_start_with_ovs: {get_param: NuageMetadataAgentStartWithOvs}
+            nuage::metadataagent::nova_api_endpoint_type: {get_param: NuageNovaApiEndpoint}
+            nuage::metadataagent::nova_region_name: {get_param: NuageNovaRegionName}
+            tripleo::profile::base::neutron::agents::nuage::nova_os_tenant_name: 'service'
+            tripleo::profile::base::neutron::agents::nuage::nova_os_password: {get_param: NovaPassword}
+            tripleo::profile::base::neutron::agents::nuage::nova_auth_ip: {get_param: [EndpointMap, KeystoneInternal, host]}
+            tripleo.neutron_compute_plugin_nuage.firewall_rules:
+              '118 neutron vxlan networks':
+                proto: 'udp'
+                dport: 4789
+              '100 metadata agent':
+                dport: {get_param: NuageMetadataPort}
       step_config: |
         include ::tripleo::profile::base::neutron::agents::nuage
