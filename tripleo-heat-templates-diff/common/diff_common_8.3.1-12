diff -ruN openstack-tripleo-heat-templates-original/docker/services/neutron-api.yaml openstack-tripleo-heat-templates/docker/services/neutron-api.yaml
--- openstack-tripleo-heat-templates-original/docker/services/neutron-api.yaml	2019-04-03 12:39:54.864175754 -0400
+++ openstack-tripleo-heat-templates/docker/services/neutron-api.yaml	2019-04-03 12:41:11.986175754 -0400
@@ -244,6 +244,11 @@
           when:
             - step|int == 6
             - is_bootstrap_node|bool
+        - name: Nuage package update
+          shell: yum -y update  nuage-*
+          when:
+            - step|int == 6
+            - is_bootstrap_node|bool
         - name: Neutron package update workaround
           yum: name=python-networking-odl state=latest
           when:
diff -ruN openstack-tripleo-heat-templates-original/puppet/services/ironic-conductor.yaml openstack-tripleo-heat-templates/puppet/services/ironic-conductor.yaml
--- openstack-tripleo-heat-templates-original/puppet/services/ironic-conductor.yaml	2019-04-03 12:39:54.940175754 -0400
+++ openstack-tripleo-heat-templates/puppet/services/ironic-conductor.yaml	2019-04-03 12:41:11.985175754 -0400
@@ -161,6 +161,10 @@
   MonitoringSubscriptionIronicConductor:
     default: 'overcloud-ironic-conductor'
     type: string
+  IronicDhcpProvider:
+    description: Which DHCP provider to use
+    default: ''
+    type: string
 
 resources:
   IronicBase:
@@ -176,6 +180,7 @@
       IronicDebug: {get_param: IronicDebug}
 
 conditions:
+  dhcp_provider_unset: {equals : [{get_param: IronicDhcpProvider}, '']}
   service_debug:
     or:
       - equals: [{get_param: IronicDebug}, 'true']
@@ -192,6 +197,11 @@
       config_settings:
         map_merge:
           - get_attr: [IronicBase, role_data, config_settings]
+          -
+            if:
+            - dhcp_provider_unset
+            - {}
+            - ironic::conductor::dhcp_provider: {get_param: IronicDhcpProvider}
           - ironic::conductor::api_url: {get_param: [EndpointMap, IronicInternal, uri_no_suffix]}
             ironic::conductor::cleaning_disk_erase: {get_param: IronicCleaningDiskErase}
             ironic::conductor::cleaning_network: {get_param: IronicCleaningNetwork}
